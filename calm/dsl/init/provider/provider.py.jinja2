{% macro ProviderTemplate(provider_name, pc_ip, pc_port) -%}
# THIS FILE IS AUTOMATICALLY GENERATED.
"""
Sample Calm DSL for {{provider_name}} provider

The top-level folder contains the following files:
{{provider_name}}Provider/
├── provider.py
└── scripts
    └── verify_script.py

On run, this provider does the following:
  1. Creates variables for Provider's authentication schema
  2. Creates variables for Provider's endpoint schema
  3. Creates variables for Provider attributes
  4. Creates credentials that can be leveraged in shell & powershell tasks
  5. Creates an action which contains the script to verify accounts created for the current provider
  6. Creates a test account which can be used for performing test executions on provider actions
  7. Creates Resource types that can be managed as part of the Provider

Useful commands (execute from top-level directory):
  1. calm compile provider --file {{provider_name}}Provider/provider.py
  2. calm create provider --file {{provider_name}}Provider/provider.py --name <provider_name>
  3. calm get providers --name <provider_name>
  4. calm describe provider <provider_name>
  5. calm delete providers <provider_names>
  6. calm test provider-verify <provider_name>
  7. calm watch provider-verify-execution <runlog_uuid>
  8. calm abort provider-verify-execution <runlog_uuid>
  9. calm test resource-type-action <provider_name> <resource_type_name> <resource_type_name>
  10. calm watch resource-type-action-execution <runlog_uuid>
  11. calm abort resource-type-action-execution <runlog_uuid>

"""
from calm.dsl.builtins import (
    CalmVariable, CloudProvider, action, ResourceType,
    ProviderEndpointSchema, ProviderTestAccount,
    basic_cred, read_local_file,
)
from calm.dsl.builtins.models.task import ProviderTask as CalmTask
from calm.dsl.constants import CLOUD_PROVIDER as PROVIDER, RESOURCE_TYPE

# from calm.dsl.builtins import (
#     NutanixEndpointSchema, VmwareEndpointSchema, GCPEndpointSchema,
#     AWSEndpointSchema, AzureEndpointSchema, NoneEndpointSchema,
# )

LINUX_IP = "10.10.10.10"
LINUX_CREDENTIAL = basic_cred(
    "nutanix", read_local_file("linux_credential_key"),
    name="LinuxJumpboxCred", type="KEY"
)

WINDOWS_IP = "10.10.10.12"
WINDOWS_CREDENTIAL = basic_cred(
    "administrator", name="WindowsJumpboxCred", password="anothersecret"
)

class {{provider_name}}ResourceType(ResourceType):
    """Sample ResourceType"""

    resource_kind = "Compute"

    # Icon
    # icon_file = '/path_to_icon/icon.jpg'
    # icon_name = 'myIcon'

    # Variables
    variables = [
        CalmVariable.Simple.string(name="resource_type_var", value="value"),
    ]

    # Schemas
    schemas = [
        CalmVariable.Simple.string(name="resource_kind", value="compute"),
    ]

    """
    Actions
        - Only one action can be of type RESOURCE_TYPE.ACTION_TYPE.CREATE
        - Only one action can be of type RESOURCE_TYPE.ACTION_TYPE.DELETE
        - Only one action can be of type RESOURCE_TYPE.ACTION_TYPE.LIST
        - All other actions should be of type RESOURCE_TYPE.ACTION_TYPE.GENERIC
    """
    @action
    def Create(type=RESOURCE_TYPE.ACTION_TYPE.CREATE):
        """Create Action for {{provider_name}}ResourceType"""
        CalmTask.Exec.ssh(name="ShellTask", script="pwd\nls\nwhoami\nsleep 5", cred=LINUX_CREDENTIAL, ip=LINUX_IP, port=22)
        CalmTask.Exec.escript(name="Create Resource", script="print ('Creating an instance of {{provider_name}}ResourceType')")

    @action
    def Delete(type=RESOURCE_TYPE.ACTION_TYPE.DELETE):
        """Delete Action for {{provider_name}}ResourceType"""
        CalmTask.Exec.escript(name="Delete Resource", script="print ('Deleting an instance of {{provider_name}}ResourceType')")

    @action
    def List(type=RESOURCE_TYPE.ACTION_TYPE.LIST):
        """List Action for {{provider_name}}ResourceType"""
        outputs = [CalmVariable.Simple.string(name="resource_ids", value="")]
        CalmTask.SetVariable.escript(
            name="List Resources", variables=['resource_ids'],
            script="print (\"resource_ids = ['resource1', 'resource2']\")"
        )

    @action
    def Clone():
        """Clone Action for {{provider_name}}ResourceType"""
        outputs = [CalmVariable.Simple.string(name="cloned_resource_id", value="")]
        existing_resource_id = CalmVariable.Simple.string("")
        CalmTask.Exec.powershell(name="PowershellTask", script="dir", cred=WINDOWS_CREDENTIAL, ip=WINDOWS_IP, port=5985, connection_protocol='http')
        CalmTask.SetVariable.escript(
            name="Clone existing Resources", variables=['cloned_resource_id'],
            script="""print("Cloning existing HelloResourceType with id: @@{existing_resource_id}@@");print ("cloned_resource_id = new_resource")"""
        )


class {{provider_name}}Provider(CloudProvider):
    """Sample provider for {{provider_name}}"""

    infra_type = PROVIDER.INFRA_TYPE.CLOUD

    # Defining Resource Types to be managed under this Provider
    resource_types = [{{provider_name}}ResourceType]

    # Defining variables for Authentication Schema
    auth_schema_variables = [
        CalmVariable.Simple.string(name="username", value="", is_mandatory=True, runtime=True),
        CalmVariable.Simple.Secret.string(name="password", value="", is_mandatory=True, runtime=True),
    ]

    # Defining custom Endpoint Schema
    endpoint_schema = ProviderEndpointSchema(
        type=PROVIDER.ENDPOINT_KIND.CUSTOM,
        variables=[
            CalmVariable.Simple.string(name="server_ip", value="1.1.1.1", is_mandatory=True, runtime=True),
            CalmVariable.Simple.int(name="port_number", value="443", is_mandatory=True, runtime=True)
        ]
    )

    # Standard endpoint types can also be used the following way (Uncomment the corresponding import too)
    # endpoint_schema = NutanixEndpointSchema()

    # Defining variables for Provider attributes
    variables = [
        CalmVariable.Simple.string(name="provider_var", value="provider_val", runtime=True),
        CalmVariable.WithOptions.FromTask.string(
            CalmTask.Exec.ssh(script="echo option1,option2,option3", cred=LINUX_CREDENTIAL, ip=LINUX_IP, port=22),
            name="provider_dynamic_var", label="Dynamic Var",
        )
    ]

    # Defining credentials to be consumed in shell & powershell tasks
    credentials = [LINUX_CREDENTIAL, WINDOWS_CREDENTIAL]

    # Defining an account for performing test executions on Provider & ResourceType actions
    # - Variable list of test account should be atleast the combination of
    #   (auth_schema_variables + endpoint_schema_variables), with just the values modified
    test_account = ProviderTestAccount(
        name='Test{{provider_name}}Account', description='Used for test executions',
        variables=[
            CalmVariable.Simple.string(name="server_ip", value="10.10.10.10", is_mandatory=True, runtime=True),
            CalmVariable.Simple.int(name="port_number", value="9440", is_mandatory=True, runtime=True),
            CalmVariable.Simple.string(name="username", value="root", is_mandatory=True, runtime=True),
            CalmVariable.Simple.Secret.string(name="password", value="iamasecret", is_mandatory=True, runtime=True),
            CalmVariable.WithOptions.FromTask.string(
                CalmTask.Exec.ssh(script="echo option1,option2,option3", cred=LINUX_CREDENTIAL, ip=LINUX_IP, port=22),
                name="provider_dynamic_var", label="Dynamic Var", value="option2"
            )
        ],
    )

    @action
    def Verify():  # Name of the action must be 'Verify'

        """Verify action for Provider"""

        CalmTask.Exec.escript(name="VerifyCreds", filename="scripts/verify_script.py")
        CalmTask.Exec.escript(name="PrintSuccessMessage", script="print ('Successfully Authenticated')")


{%- endmacro %}


{{ProviderTemplate(provider_name, pc_ip, pc_port)}}
