# THIS FILE IS AUTOMATICALLY GENERATED.
# Disclaimer: Please test this file before using in production.
"""
Generated blueprint DSL (.py)
"""

import json  # no_qa
import os  # no_qa

from calm.dsl.builtins import CalmTask as CalmVarTask
from calm.dsl.builtins import *  # no_qa
from calm.dsl.runbooks import CalmEndpoint as Endpoint

DSL_CONFIG = json.loads(read_local_file(".tests/config.json"))
AZURE_ACCOUNT = DSL_CONFIG["ACCOUNTS"]["AZURE"][1]
PROJECT = DSL_CONFIG["PROJECTS"]["PROJECT1"]
PROJECT_NAME = PROJECT["NAME"]
ENV_NAME = PROJECT["ENVIRONMENTS"][0]["NAME"]

# Secret Variables

BP_CRED_cred_PASSWORD = "Azure@password1"

# Credentials
BP_CRED_cred = basic_cred(
    "Azureusername",
    BP_CRED_cred_PASSWORD,
    name="cred",
    type="PASSWORD",
    default=True,
)


class Service1(Service):

    pass


class VM1(Substrate):

    os_type = "Linux"
    provider_type = "AZURE_VM"
    provider_spec = read_provider_spec(os.path.join("specs", "VM1_provider_spec.yaml"))
    provider_spec.spec.get("resources", {})["account_uuid"] = AZURE_ACCOUNT.get("UUID")
    provider_spec.spec.get("resources", {})["account_uuid"] = AZURE_ACCOUNT.get("UUID")
    provider_spec_editables = read_spec(
        os.path.join("specs", "VM1_create_spec_editables.yaml")
    )
    readiness_probe = readiness_probe(
        connection_type="SSH",
        disabled=False,
        retries="5",
        connection_port=22,
        address="@@{platform.publicIPAddressList[0]}@@",
        delay_secs="120",
        credential=ref(BP_CRED_cred),
    )


class Package1(Package):

    services = [ref(Service1)]


class deployment_5b4215da(Deployment):

    min_replicas = "1"
    max_replicas = "1"
    default_replicas = "1"

    packages = [ref(Package1)]
    substrate = ref(VM1)


class Default(Profile):

    environments = [Ref.Environment(name=ENV_NAME)]
    deployments = [deployment_5b4215da]


class test_azure_bp(Blueprint):

    services = [Service1]
    packages = [Package1]
    substrates = [VM1]
    profiles = [Default]
    credentials = [BP_CRED_cred]


class BpMetadata(Metadata):

    project = Ref.Project("default")
